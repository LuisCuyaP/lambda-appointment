org: myorgluis
service: appoinment

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  environment:
    DDB_TABLE: AppointmentsTable
    APPOINTMENT_TOPIC_ARN: !Ref AppointmentTopic  
  iam:
    role:
      statements:
        # DynamoDB
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:GetItem
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/AppointmentsTable
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/AppointmentsTable/index/InsuredGSI
        # SNS
        - Effect: Allow
          Action: sns:Publish
          Resource: !Ref AppointmentTopic

plugins:
  - serverless-offline

functions:
  appointment:
    handler: src/Interfaces/Http/appointment.router
    events:
      - httpApi:
          path: /appointments
          method: post
      - httpApi:
          path: /appointments/{insuredId}
          method: get

resources:
  Resources:
    # DynamoDB
    AppointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppointmentsTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: appointmentId
            AttributeType: S
          - AttributeName: insuredId
            AttributeType: S
        KeySchema:
          - AttributeName: appointmentId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: InsuredGSI
            KeySchema:
              - AttributeName: insuredId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    # SNS Topic
    AppointmentTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: appointment-topic
        
    # --- SQS por paÃ­s ---
    SqsPE:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE

    SqsCL:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_CL

    # --- Suscripciones SNS -> SQS con filtro por countryISO ---
    SnsSubPE:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentTopic
        Protocol: sqs
        Endpoint: !GetAtt SqsPE.Arn
        FilterPolicy:
          countryISO: [ "PE" ]

    SnsSubCL:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentTopic
        Protocol: sqs
        Endpoint: !GetAtt SqsCL.Arn
        FilterPolicy:
          countryISO: [ "CL" ]

    # --- Policies para permitir a SNS enviar a SQS ---
    SqsPEPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues: [ !Ref SqsPE ]
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: { Service: sns.amazonaws.com }
              Action: SQS:SendMessage
              Resource: !GetAtt SqsPE.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref AppointmentTopic

    SqsCLPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues: [ !Ref SqsCL ]
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: { Service: sns.amazonaws.com }
              Action: SQS:SendMessage
              Resource: !GetAtt SqsCL.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !Ref AppointmentTopic