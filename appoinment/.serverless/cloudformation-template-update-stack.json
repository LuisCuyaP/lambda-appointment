{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "AppointmentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appoinment-dev-appointment"
      }
    },
    "AppointmentUnderscorepeLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appoinment-dev-appointment_pe"
      }
    },
    "AppointmentUnderscoreclLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/appoinment-dev-appointment_cl"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "appoinment",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appoinment-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/appoinment-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:GetItem",
                    "dynamodb:Query"
                  ],
                  "Resource": [
                    "arn:aws:dynamodb:us-east-1:157051741410:table/AppointmentsTable",
                    "arn:aws:dynamodb:us-east-1:157051741410:table/AppointmentsTable/index/InsuredGSI"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sns:Publish"
                  ],
                  "Resource": {
                    "Ref": "AppointmentTopic"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "events:PutEvents"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ConfirmationQueue",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SqsPE",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "SqsCL",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "appoinment",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "AppointmentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-55023442-a1fe",
          "S3Key": "serverless/appoinment/dev/1757088442813-2025-09-05T16:07:22.813Z/appoinment.zip"
        },
        "Handler": "src/Interfaces/Http/appointment.router",
        "Runtime": "nodejs20.x",
        "FunctionName": "appoinment-dev-appointment",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DDB_TABLE": "AppointmentsTable",
            "APPOINTMENT_TOPIC_ARN": {
              "Ref": "AppointmentTopic"
            },
            "EVENT_BUS_NAME": "default",
            "PE_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "PE_DB_PORT": "3306",
            "PE_DB_USER": "admin",
            "PE_DB_PASS": "Softtek#2023",
            "PE_DB_NAME": "app_pe",
            "CL_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "CL_DB_PORT": "3306",
            "CL_DB_USER": "admin",
            "CL_DB_PASS": "Softtek#2023",
            "CL_DB_NAME": "app_cl",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentLogGroup"
      ]
    },
    "AppointmentUnderscorepeLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-55023442-a1fe",
          "S3Key": "serverless/appoinment/dev/1757088442813-2025-09-05T16:07:22.813Z/appoinment.zip"
        },
        "Handler": "src/Interfaces/Workers/appointment_pe.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "appoinment-dev-appointment_pe",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DDB_TABLE": "AppointmentsTable",
            "APPOINTMENT_TOPIC_ARN": {
              "Ref": "AppointmentTopic"
            },
            "EVENT_BUS_NAME": "default",
            "PE_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "PE_DB_PORT": "3306",
            "PE_DB_USER": "admin",
            "PE_DB_PASS": "Softtek#2023",
            "PE_DB_NAME": "app_pe",
            "CL_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "CL_DB_PORT": "3306",
            "CL_DB_USER": "admin",
            "CL_DB_PASS": "Softtek#2023",
            "CL_DB_NAME": "app_cl",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentUnderscorepeLogGroup"
      ]
    },
    "AppointmentUnderscoreclLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-55023442-a1fe",
          "S3Key": "serverless/appoinment/dev/1757088442813-2025-09-05T16:07:22.813Z/appoinment.zip"
        },
        "Handler": "src/Interfaces/Workers/appointment_cl.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "appoinment-dev-appointment_cl",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "DDB_TABLE": "AppointmentsTable",
            "APPOINTMENT_TOPIC_ARN": {
              "Ref": "AppointmentTopic"
            },
            "EVENT_BUS_NAME": "default",
            "PE_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "PE_DB_PORT": "3306",
            "PE_DB_USER": "admin",
            "PE_DB_PASS": "Softtek#2023",
            "PE_DB_NAME": "app_pe",
            "CL_DB_HOST": "dbappointment.c2jccqskykox.us-east-1.rds.amazonaws.com",
            "CL_DB_PORT": "3306",
            "CL_DB_USER": "admin",
            "CL_DB_PASS": "Softtek#2023",
            "CL_DB_NAME": "app_cl",
            "NODE_OPTIONS": "--enable-source-maps"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AppointmentUnderscoreclLogGroup"
      ]
    },
    "AppointmentLambdaVersionB9gDcOtleCq6naXq3kQJ5UdWu4iIfp6IffTlOBYvs": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentLambdaFunction"
        },
        "CodeSha256": "6NFYzjIpiRWDH37hL6U5zo5SbXWBEnZTDbmg/DcaAZg="
      }
    },
    "AppointmentUnderscorepeLambdaVersionWMcIP2jaFWajK1OBmIYOudZ6a0CSAlrIL5P4Fzlw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentUnderscorepeLambdaFunction"
        },
        "CodeSha256": "6NFYzjIpiRWDH37hL6U5zo5SbXWBEnZTDbmg/DcaAZg="
      }
    },
    "AppointmentUnderscoreclLambdaVersion5lAuVi4BAFZ3VfOKNvyGzvFMAnluICTLVBXy7v6o": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AppointmentUnderscoreclLambdaFunction"
        },
        "CodeSha256": "6NFYzjIpiRWDH37hL6U5zo5SbXWBEnZTDbmg/DcaAZg="
      }
    },
    "AppointmentEventSourceMappingSQSConfirmationQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ConfirmationQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentUnderscorepeEventSourceMappingSQSSqsPE": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "MaximumBatchingWindowInSeconds": 0,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SqsPE",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentUnderscorepeLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "AppointmentUnderscoreclEventSourceMappingSQSSqsCL": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 1,
        "MaximumBatchingWindowInSeconds": 0,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "SqsCL",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentUnderscoreclLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-appoinment",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "AppointmentLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationAppointment": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "AppointmentLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostAppointments": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /appointments",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAppointment"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationAppointment"
    },
    "HttpApiRouteGetAppointmentsInsuredidVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /appointments/{insuredId}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationAppointment"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationAppointment"
    },
    "AppointmentsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "AppointmentsTable",
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "appointmentId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "insuredId",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "appointmentId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "InsuredGSI",
            "KeySchema": [
              {
                "AttributeName": "insuredId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    },
    "AppointmentTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "appointment-topic"
      }
    },
    "SqsPE": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQS_PE"
      }
    },
    "SqsCL": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQS_CL"
      }
    },
    "SnsSubPE": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "AppointmentTopic"
        },
        "Protocol": "sqs",
        "Endpoint": {
          "Fn::GetAtt": [
            "SqsPE",
            "Arn"
          ]
        },
        "FilterPolicy": {
          "countryISO": [
            "PE"
          ]
        }
      }
    },
    "SnsSubCL": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "TopicArn": {
          "Ref": "AppointmentTopic"
        },
        "Protocol": "sqs",
        "Endpoint": {
          "Fn::GetAtt": [
            "SqsCL",
            "Arn"
          ]
        },
        "FilterPolicy": {
          "countryISO": [
            "CL"
          ]
        }
      }
    },
    "SqsPEPolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "SqsPE"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Action": "SQS:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "SqsPE",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "AppointmentTopic"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "SqsCLPolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "SqsCL"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com"
              },
              "Action": "SQS:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "SqsCL",
                  "Arn"
                ]
              },
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "AppointmentTopic"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "ConfirmationQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQS_CONFIRMATION"
      }
    },
    "AppointmentConfirmedRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "appointment-confirmed-rule",
        "EventBusName": "default",
        "EventPattern": {
          "source": [
            "rimac.appointment"
          ],
          "detail-type": [
            "AppointmentConfirmed"
          ]
        },
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ConfirmationQueue",
                "Arn"
              ]
            },
            "Id": "ConfirmationTarget"
          }
        ]
      }
    },
    "ConfirmationQueuePolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "Queues": [
          {
            "Ref": "ConfirmationQueue"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "SQS:SendMessage",
              "Resource": {
                "Fn::GetAtt": [
                  "ConfirmationQueue",
                  "Arn"
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-55023442-a1fe",
      "Export": {
        "Name": "sls-appoinment-dev-ServerlessDeploymentBucketName"
      }
    },
    "AppointmentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentLambdaVersionB9gDcOtleCq6naXq3kQJ5UdWu4iIfp6IffTlOBYvs"
      },
      "Export": {
        "Name": "sls-appoinment-dev-AppointmentLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentUnderscorepeLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentUnderscorepeLambdaVersionWMcIP2jaFWajK1OBmIYOudZ6a0CSAlrIL5P4Fzlw"
      },
      "Export": {
        "Name": "sls-appoinment-dev-AppointmentUnderscorepeLambdaFunctionQualifiedArn"
      }
    },
    "AppointmentUnderscoreclLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AppointmentUnderscoreclLambdaVersion5lAuVi4BAFZ3VfOKNvyGzvFMAnluICTLVBXy7v6o"
      },
      "Export": {
        "Name": "sls-appoinment-dev-AppointmentUnderscoreclLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-appoinment-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-appoinment-dev-HttpApiUrl"
      }
    }
  }
}