{
  "version": 3,
  "sources": ["../../../../../src/Interfaces/Http/docs.ts", "../../../../../src/docs/openapi.json"],
  "sourcesContent": ["import { APIGatewayProxyHandlerV2 } from 'aws-lambda';\r\nimport openapi from '../../docs/openapi.json';\r\n\r\nexport const handler: APIGatewayProxyHandlerV2 = async () => ({\r\n  statusCode: 200,\r\n  headers: { 'Content-Type': 'application/json' },\r\n  body: JSON.stringify(openapi),\r\n});\r\n", "{\r\n    \"openapi\": \"3.0.3\",\r\n    \"info\": {\r\n        \"title\": \"Rimac Appointments API\",\r\n        \"version\": \"1.0.0\"\r\n    },\r\n    \"paths\": {\r\n        \"/appointments\": {\r\n            \"post\": {\r\n                \"summary\": \"Crea una cita\",\r\n                \"requestBody\": {\r\n                    \"required\": true,\r\n                    \"content\": {\r\n                        \"application/json\": {\r\n                            \"schema\": {\r\n                                \"type\": \"object\",\r\n                                \"required\": [\r\n                                    \"insuredId\",\r\n                                    \"scheduleId\",\r\n                                    \"countryISO\"\r\n                                ],\r\n                                \"properties\": {\r\n                                    \"insuredId\": {\r\n                                        \"type\": \"string\",\r\n                                        \"pattern\": \"^[0-9]{5}$\"\r\n                                    },\r\n                                    \"scheduleId\": {\r\n                                        \"type\": \"integer\"\r\n                                    },\r\n                                    \"countryISO\": {\r\n                                        \"type\": \"string\",\r\n                                        \"enum\": [\r\n                                            \"PE\",\r\n                                            \"CL\"\r\n                                        ]\r\n                                    }\r\n                                }\r\n                            },\r\n                            \"examples\": {\r\n                                \"ok\": {\r\n                                    \"value\": {\r\n                                        \"insuredId\": \"01234\",\r\n                                        \"scheduleId\": 100,\r\n                                        \"countryISO\": \"PE\"\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                \"responses\": {\r\n                    \"202\": {\r\n                        \"description\": \"Aceptado\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"type\": \"object\",\r\n                                    \"properties\": {\r\n                                        \"message\": {\r\n                                            \"type\": \"string\"\r\n                                        },\r\n                                        \"appointmentId\": {\r\n                                            \"type\": \"string\",\r\n                                            \"format\": \"uuid\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    \"400\": {\r\n                        \"description\": \"Bad Request\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        \"/appointments/{insuredId}\": {\r\n            \"get\": {\r\n                \"summary\": \"Lista citas por asegurado\",\r\n                \"parameters\": [\r\n                    {\r\n                        \"in\": \"path\",\r\n                        \"name\": \"insuredId\",\r\n                        \"required\": true,\r\n                        \"schema\": {\r\n                            \"type\": \"string\",\r\n                            \"pattern\": \"^[0-9]{5}$\"\r\n                        }\r\n                    }\r\n                ],\r\n                \"responses\": {\r\n                    \"200\": {\r\n                        \"description\": \"Listado\",\r\n                        \"content\": {\r\n                            \"application/json\": {\r\n                                \"schema\": {\r\n                                    \"type\": \"object\",\r\n                                    \"properties\": {\r\n                                        \"items\": {\r\n                                            \"type\": \"array\",\r\n                                            \"items\": {\r\n                                                \"type\": \"object\",\r\n                                                \"properties\": {\r\n                                                    \"appointmentId\": {\r\n                                                        \"type\": \"string\"\r\n                                                    },\r\n                                                    \"insuredId\": {\r\n                                                        \"type\": \"string\"\r\n                                                    },\r\n                                                    \"scheduleId\": {\r\n                                                        \"type\": \"integer\"\r\n                                                    },\r\n                                                    \"countryISO\": {\r\n                                                        \"type\": \"string\"\r\n                                                    },\r\n                                                    \"status\": {\r\n                                                        \"type\": \"string\",\r\n                                                        \"enum\": [\r\n                                                            \"pending\",\r\n                                                            \"completed\"\r\n                                                        ]\r\n                                                    },\r\n                                                    \"createdAt\": {\r\n                                                        \"type\": \"string\",\r\n                                                        \"format\": \"date-time\"\r\n                                                    },\r\n                                                    \"updatedAt\": {\r\n                                                        \"type\": \"string\",\r\n                                                        \"format\": \"date-time\"\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"],
  "mappings": "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",
  "names": []
}
